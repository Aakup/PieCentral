/* jshint globalstrict: true */
"use strict";

var path = require('path');
var typpo_module = require('./factory');
var xbee = require('./xbee');

var PIEMOS_FRAMING_YAML_FILE = 'legacy_piemos_framing.yaml';

// Init Typpo
var typpo = typpo_module.make();
typpo.set_target_type('ARM');
typpo.load_type_file(path.resolve(__dirname, PIEMOS_FRAMING_YAML_FILE), false);


exports.format_packet = function (address, PiELESAnalogVals,
    PiELESDigitalVals) {

  // Apply scaling.
  for (var i = 0; i < 7; i++) {
    PiELESAnalogVals[i] = (PiELESAnalogVals[i] * 128 + 127) | 0;
    if (PiELESAnalogVals[i] < 0) {
      PiELESAnalogVals[i] = 0;
    }
  }

  var digitalBitfield = 0;
  for (var i = 0; i < 8; i++) {
      if (PiELESDigitalVals[i]) {
          digitalBitfield |= (1 << i);
      }
  }

  // Create initial packet
  var packet = typpo.create('pier_incomingdata');
  packet.set_slot('ident',
      typpo.get_const('PIER_INCOMINGDATA_IDENT'));
  // TODO(rqou): Meaningful flags?
  packet.set_slot('fieldtime', 0);
  packet.set_slot('flags', 0);
  packet.set_slot('analog', PiELESAnalogVals);
  packet.set_slot('digital', digitalBitfield);

  return xbee.createPacket(packet, address);
}
